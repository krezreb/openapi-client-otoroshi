"""
    Otoroshi Admin API

    Admin API of the Otoroshi reverse proxy  # noqa: E501

    The version of the OpenAPI document: 1.5.0-alpha.14
    Contact: oss@maif.fr
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.apikeys_api import ApikeysApi  # noqa: E501


class TestApikeysApi(unittest.TestCase):
    """ApikeysApi unit test stubs"""

    def setUp(self):
        self.api = ApikeysApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_api_key_quotas(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_api_key_quotas

        Consumed quotas for a specific apikey  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_bulk_create_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_bulk_create_action

        Create multiple ApiKeys at the same time  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_bulk_delete_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_bulk_delete_action

        Delete multiple ApiKeys at the same time  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_bulk_patch_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_bulk_patch_action

        Update (using json-patch) multiple ApiKeys at the same time  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_bulk_update_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_bulk_update_action

        Update multiple ApiKeys at the same time  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_create_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_create_action

        Creates a ApiKey  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_delete_entity_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_delete_entity_action

        Deletes a specific ApiKey using its id  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_find_all_entities_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_find_all_entities_action

        Find all possible ApiKeys entities  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_find_entity_by_id_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_find_entity_by_id_action

        Find a specific ApiKey using its id  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_patch_entity_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_patch_entity_action

        Updates (using json-patch) a specific ApiKey using its id  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_reset_api_key_quotas(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_reset_api_key_quotas

        Reset quotas consumption for an apikey  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_api_keys_controller_update_entity_action(self):
        """Test case for otoroshi_controllers_adminapi_api_keys_controller_update_entity_action

        Updates a specific ApiKey using its id  # noqa: E501
        """
        pass

    def test_otoroshi_controllers_adminapi_templates_controller_initiate_api_key_apikeys(self):
        """Test case for otoroshi_controllers_adminapi_templates_controller_initiate_api_key_apikeys

        Creates a new ApiKey from a template  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
